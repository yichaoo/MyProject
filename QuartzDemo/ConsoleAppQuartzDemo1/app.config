<?xml version="1.0"?>
<configuration>
  <configSections>
    <!--定义quartz解析节点-->
    <section name="quartz" type="System.Configuration.NameValueSectionHandler,System,Version=1.0.5000.0,Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
  </configSections>
  <startup>
    
  <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup>
  <!--quartz的相关配置 begin-->
  <quartz>
    <!--调度器的实例名-->
    <add key="quartz.scheduler.instanceName" value="LYCExampleDefaultQuartzScheduler"/>
    <!--线程类型-->
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz"/>
    <!--线程数量，理论上一个线程对应一个job,这个值在 10 - 50 比较合适-->
    <add key="quartz.threadPool.threadCount" value="10"/>
    <!--线程优先级-->
    <add key="quartz.threadPool.threadPriority" value="Normal"/>
    <!--#任务失败阈值 默认值：60秒-->
    <add key="quartz.jobStore.misfireThreshold" value="60000"/>
    <!--任务存储类型,默认是RAMJobStore,任务在内存中运行，它的优点是速度。因为所有的 Scheduler 信息都保存在计算机内存中，访问这些数据随着电脑而变快。而无须访问数据库或IO等操作，但它的缺点是将 Job 和 Trigger 信息存储在内存中的。因而我们每次重启程序，Scheduler 的状态，包括 Job 和 Trigger 信息都丢失了-->
    <add key="quartz.jobStore.type" value="Quartz.Simpl.RAMJobStore, Quartz"/>
    <!--通过xml配置加载job-->
    <add key="quartz.plugin.xml.type" value="Quartz.Plugin.Xml.XMLSchedulingDataProcessorPlugin, Quartz"/>
    <!--job配置文件路径-->
    <add key="quartz.plugin.xml.fileNames" value="~/quartz_jobs.xml"/>
  </quartz>
  <!--quartz的相关配置 end-->
</configuration>
